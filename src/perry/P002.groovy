package perry

import groovy.transform.TypeChecked

/**
 * Created with IntelliJ IDEA.
 * User: MarkPerry
 * Date: 24/10/12
 * Time: 2:08 AM
 * To change this template use File | Settings | File Templates.
 */


/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two
 * terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 *
 */
@TypeChecked
class P002 {

	def p() {
		def is = new InfiniteSeq()
		Closure<Integer> gen = { List<Integer> it ->
			def n = it.size()
			it.get(n - 1) + it.get(n - 2)
		}
		def max = 4 * 10 ** 6 - 1
		def fibs = is.generateUntil([1, 2], gen, { List<Integer> it -> gen.call(it) > max})
		def sum = fibs.findAll { Integer it -> it % 2 == 0}.sum()
		println sum
		assert(sum == 4613732)
	}

}
